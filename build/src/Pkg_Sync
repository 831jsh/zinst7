#!/bin/bash

## Define root DIR of zinst
BaseRoot=$ZinstBaseRoot 
Types=$ZOptions
Sync_File=$ZPackages
	## Check Types
	if [[ $Types != ""  ]]
	then
			if [[ `(echo $Types | grep "\-file")` != "" ]]; then
					if [[ $Sync_File = "" ]]
					then
						echo $Barr
						echo " --- Parse error: Please insert an information exactly. ---"
						echo " --- zinst sync -file [Save filename]               ---"
						echo $Barr
						exit 0;	
					fi
			fi

			if [[ `(echo $Types | grep "\-sara")` != "" ]]; then
				Sync_File="/tmp/temp_list.save"
				ZPackages="$Sync_File"
				NIC=`ip addr |grep "brd" | grep "inet" | head -1 | awk '{print $NF}'`
				LocalHost="`/sbin/ifconfig $NIC |grep " addr:" |grep Bcast |head -1 | awk '{print $2}'|awk  -F ':' '{print $2}'`"
				rm -f $Sync_File
				Sara_URL=`curl "http://$Sara_Host/zinst/?host=$LocalHost&user=$WhoStamp" > $Sync_File`
					## Existed file check from Sara
					CheckSaveDown=`grep "Not Found" ./$Sync_File`
					if [[ $CheckSaveDown != "" ]];then
						echo "Save file is not exist in Sara"
						exit 0;
					fi
			fi


			if [[ `(echo $Types | grep "\-url")` != "" ]]; then
				Temp_File="/tmp/temp_list.save"
				rm -f $Temp_File 2> $zinst_log
				curl "$Sync_File" 2> $zinst_log > $Temp_File
				Sync_File=$Temp_File
					## Download file check
					if [[ `(cat $Sync_File)` = "" ]];then
						echo "Please check this URL for Sync instruction: \"$ZPackages\""
						exit 0;
					elif [[ `(grep "Not Found" $Sync_File)` != ""  ]];then
						echo "Please check this URL for Sync instruction: \"$ZPackages\""
						exit 0;
					fi
				ZPackages=$Sync_File
			fi
	else
		echo $Barr
		echo " --- Parse error: Please insert a Type ---"
		echo $Barr
		exit 0; 
	fi

	if [[ ! -f  $Sync_File ]];then
		cd ~/
		SentFileChk=`echo "$ZPackages" | awk -F"/" '{print $NF}'` 
		ZPackages="$SentFileChk"
			if [[ ! -f  $SentFileChk ]];then
				echo $Barr
				echo " --- Could not find save file as you typed.            ---"
				echo " --- Plese insert a file name exactly.                 ---"
				echo $Barr
				exit 0;
			fi
	fi

## Define the file Dir & name
Origin_zsave=$ZPackages

## Make an as-is list
Target_zsave_file="current_system_all.list"
Target_zsave_full="/tmp/$Target_zsave_file"
Sorted_org_zsave="/tmp/sorted_orizin.list"
Sorted_tgt_zsave="/tmp/sorted_target.list"
tmp_results="/tmp/tmp_result.txt"
remove_zsave_list="/tmp/remove_zsave_list.list"
install_zsave_list="/tmp/install_zsave_list.list"

## Clean Old temp file
rm -f $Sorted_org_zsave $Sorted_tgt_zsave $tmp_results $remove_zsave_list $install_zsave_list $Target_zsave_full

## Rebuild as-is file
echo "# --- Last touched by $WhoStamps --- " > $Target_zsave_full
echo "# --- Last command \" zinst $PackageAll \" " >> $Target_zsave_full
echo "# Date: `date +%Y.%m.%d_%T` " >> $Target_zsave_full
echo "#"  >> $Target_zsave_full
echo "# zinst package installer all-configuration backup-list for the package restore" >> $Target_zsave_full
zinst ls | awk '{print "Package install",$4".zinst"}' >> $Target_zsave_full
echo "- - - " >> $Target_zsave_full
zinst set | awk 'NR>1{print "Package setting",$1}' >> $Target_zsave_full
Block="======================================================================================="
## Sort a list
sort $Origin_zsave | egrep -v "#" | sed -e '/^$/d' > $Sorted_org_zsave
sort $Target_zsave_full | egrep -v "#" | sed -e '/^$/d' > $Sorted_tgt_zsave

## Different check
diff $Sorted_org_zsave $Sorted_tgt_zsave|fgrep -v " #" | egrep  -v "^[0-9]" | sort |sed -e '/> -/d' -e '/< -/d'  > $tmp_results

## Show the list
cat $tmp_results | grep ">" | sed -e 's/ settting / setting /g' > $remove_zsave_list
cat $tmp_results | grep "<" | sed -e 's/ settting / setting /g' > $install_zsave_list

current_array=(`cat $remove_zsave_list | sed -e 's/> Package install //g' | sed -e '/ setting/d'`)
changing_array=(`cat $install_zsave_list | sed -e 's/< Package install //g' | sed -e '/ setting/d'`)
	## loop for version check
	xCount=0
	while [[ $xCount -lt ${#current_array[@]} ]]; do
		Raw_xPkgName=`echo "${current_array[$xCount]}" | awk -F'-' '{print $1}'`
		Raw_xVersion=`echo "${current_array[$xCount]}" | awk -F'-' '{print $2}' | sed -e 's/\.zinst//g'`
		ExistedVersionCheck=`echo "${changing_array[@]}" |grep $Raw_xPkgName`
			if [[ $ExistedVersionCheck != "" ]]; then
					yCounter=0
					while [[ $yCounter -lt ${#changing_array[@]} ]];do
						ExistedMatchCheck=`echo "${changing_array[$yCounter]}" |grep $Raw_xPkgName`
							if [[ $ExistedMatchCheck != "" ]]; then
								ChangingVersion=`echo "${changing_array[$yCounter]}" | awk -F'-' '{print $2}' | sed -e 's/\.zinst//g'`
									if [[ "$(version_redefine "$ChangingVersion")" < "$(version_redefine "$Raw_xVersion")" ]];then
										sed -i "/> Package install $Raw_xPkgName/d" $remove_zsave_list
										sed -i "s/< Package install $Raw_xPkgName/< Package downgrade $Raw_xPkgName/g" $install_zsave_list
									else
										sed -i "/> Package install $Raw_xPkgName/d" $remove_zsave_list
										sed -i "s/< Package install $Raw_xPkgName/< Package upgrade $Raw_xPkgName/g" $install_zsave_list
									fi
							fi
					let yCounter=$yCounter+1
					done
			fi
	let xCount=$xCount+1
	done

## Print Result list
sed -i "s/> Package install /> Package remove /g" $remove_zsave_list
echo "$Block"
echo "= Target list for remove                                                              ="
echo "$Block"
cat $remove_zsave_list
echo "$Block"
echo ""
echo "$Block"
echo "= Target list for install & setting                                                   ="
echo "$Block"
cat $install_zsave_list
echo "$Block"
echo ""

Final_remove_array=(`cat $remove_zsave_list | sed -e '/ setting/d' | awk '{print $4}'`)
Final_install_array=(`cat $install_zsave_list | fgrep -v " downgrade" | sed -e 's/setting / tmp -set /g' | awk '{print $4,$5}'`)
Final_downgrade_array=(`cat $install_zsave_list | grep " downgrade" | awk '{print $4}'`)
Command_p="=  Sync   "

	if [[ `(cat $install_zsave_list)` = "" ]] && [[ `(cat $remove_zsave_list)` = "" ]]; then
		echo " === Nothing to change... === "
		echo -e "`date +%Y.%m.%d_%T`\t $WhoStamps : $Command_p - Nothing to changed... by $ZPackages" >> $History_LOG
	else
		CheckForce=`echo "$ZOptions" |egrep " -force"`
		if [[ $CheckForce = "" ]];then
			echo " === Package & setting will be install & remove as upper list. Are sure ? === [y / n]"
			read confirm_sync
		else
			confirm_sync="y"
		fi

		if [[ $confirm_sync = y ]]; then
			echo -e "`date +%Y.%m.%d_%T`\t $WhoStamps : $Command_p --- START --- by $ZPackages" >> $History_LOG 
				if [[ ${Final_remove_array[@]} != "" ]];then
					zinst remove ${Final_remove_array[@]} -force
				fi

				if [[ ${Final_downgrade_array[@]} != "" ]];then
					zinst install ${Final_downgrade_array[@]} -downgrade
				fi

				if [[ ${Final_install_array[@]} != "" ]];then
					zinst install ${Final_install_array[@]} -stable
				fi
			echo -e "`date +%Y.%m.%d_%T`\t $WhoStamps : $Command_p ---  END  --- by $ZPackages" >> $History_LOG 
		fi
	fi
rm -f $Sorted_org_zsave $Sorted_tgt_zsave $tmp_results $remove_zsave_list $install_zsave_list $Target_zsave_full
