#!/bin/bash

### Base information
CheckSetArry=($Zset)
CheckSetNum=${#CheckSetArry[@]}
	SetValue=${CheckSetArry[1]}
	if [[ $SetValue = "" ]];
	then
		$sudo_base cat $ZinstBaseRoot/vault/zinst/zinst_set.list
	else
		CSetCount=0;
			for (( i=0; i<=$CheckSetNum; i++ ))
			do
				CheckSet=`echo "${CheckSetArry[$i]}"`

					if [[ $CheckSet = "set" ]] || [[ $CheckSet = "-set" ]]
					then
						let CSetCount=$CSetCount+1
					fi
			done
		let CSetCount=$CSetCount+2
			CountSet=2
			while [[ $CountSet -lt $CSetCount  ]]
			do
				SetOptionValueE=`echo "${CheckSetArry[@]}" | awk -F '-set ' '{print $'$CountSet'}' |sed -e 's# ##'  2> $zinst_log`
				SetTarget=`echo "$SetOptionValueE" | awk -F "=" '{print $1}'`	
				ZinstSet=`echo "$SetOptionValueE" | sed -e "s#$SetTarget=##g" 2> $zinst_log`
				OptSwt=`echo $SetTarget | awk -F '.' '{print $1}'`
				Option=`echo $SetTarget | sed -e "s#$OptSwt\.##g"`
				PackageS=`echo $SetTarget | awk -F '.' '{print $1}'`
				SetZICF="*$PackageS.zicf"
				## Check a set list in zinst
				CurrentSet=( `$sudo_base cat $ZinstBaseRoot/vault/zinst/zinst_set.list | grep "^$SetTarget"` )
				CurrentSetCheck=`echo "$CurrentSet" | awk -F "=" '{print $1}'`
				CurrentSetCheck2=`echo "$CurrentSet" | sed -e "s#$CurrentSetCheck=##g"  2> $zinst_log`
					Setchecker=`ls $ZinstDIRs 2> $zinst_log |grep "$PackageS"`
					if [[ $Setchecker != ""  ]]; then
						ConfCounter=0
						Grep_ZICF_Raw=(`$sudo_base cat $ZinstDIRs/$PackageS/$SetZICF |grep "^CONF" | awk '{print "'$ZinstDIRs/$PackageS'/"$6}' | sed -e 's#\.\/##g'`)
							while [[ $ConfCounter -lt ${#Grep_ZICF_Raw[@]} ]]; do
									if [[ $Option = "" ]]; then 
										echo " Please make sure the target option "
										echo " ex) zinst set vipctl.onboot=yes "
										exit 0;
									fi
								## Find a current set 
								Grep_ZICF=`$sudo_base cat $ZinstDIRs/$PackageS/$SetZICF |grep "^CONF" | awk '{print "'$ZinstBaseRoot'/"$5}'`
									if [[ $Grep_ZICF = "" ]]; then 
										echo "$Barr"
										echo "$PackageS has not a config file as a zicf or we couldn't find any config"
										echo "Please check this zicf file of the package."
										echo ""
										echo "ex) zinst list -zicf $PackageS | grep ^CONF <--- Result is empty."
										echo " If so, you should change the file type from FILE to CONF "
										echo "$Barr"
										exit 0;
									fi
								Conf_Dir="${Grep_ZICF_Raw[$ConfCounter]%/*}"
								Grep_Option=`$sudo_base grep "^$Option=" $Conf_Dir/* 2> /dev/null`
									if [[ $Grep_Option = "" ]];then
										Grep_Option=`$sudo_base grep "^$Option = " $Conf_Dir/* 2> /dev/null`
											if [[ $Grep_Option = "" ]]; then 
												Grep_Option=`$sudo_base grep "^$Option " $Conf_Dir/* 2> /dev/null`
											fi
									fi
								## Parsing
								Conf_File=${Grep_ZICF_Raw[$ConfCounter]%:*}
									if [[ $CommandX = set ]]; then
										Command_p=" * setup "
									else
										Command_p=" & setup "
                        						fi

								Conf_Result_File=`echo "$Conf_File" | awk -F '/' '{print $NF}'`
								Grep_ZICF_Source=`$sudo_base cat $ZinstDIRs/$PackageS/$SetZICF |grep "^CONF" |grep "$Conf_Result_File$" | awk '{print "'$ZinstBaseRoot'/"$5}'`
								### Current Setting check and replace
									if [[ $SetTarget = $CurrentSetCheck ]];
									then
										Equiltype1=`$sudo_base grep "$Option=$CurrentSetCheck2" $Grep_ZICF_Source`
										Equiltype2=`$sudo_base grep "$Option = $CurrentSetCheck2" $Grep_ZICF_Source`
										Equiltype3=`$sudo_base grep "$Option $CurrentSetCheck2" $Grep_ZICF_Source`
											if [[ $Equiltype1 != "" ]];
											then 
												$sudo_base sed -i "s#$Option=$CurrentSetCheck2#$Option=$ZinstSet#g" $Grep_ZICF_Source
											elif [[ $Equiltype2 != "" ]]; then
												$sudo_base sed -i "s#$Option = $CurrentSetCheck2#$Option = $ZinstSet#g" $Grep_ZICF_Source
											elif [[ $Equiltype3 != "" ]]; then
												$sudo_base sed -i "s#$Option $CurrentSetCheck2#$Option $ZinstSet#g" $Grep_ZICF_Source
											fi		
										### Stamping a Set value for history
										Grep_Option=`$sudo_base grep "^$Option=" $Grep_ZICF_Source`
											if [[ $Grep_Option = "" ]]
											then
												Grep_Option=`$sudo_base grep "^$Option = " $Grep_ZICF_Source`
													if [[ $Grep_Option = "" ]]
													then 
														Grep_Option=`$sudo_base grep "^$Option " $Grep_ZICF_Source`
													fi
											fi
										realSetOption=`echo "$Grep_Option"  | sed -e "s#$Option #$Option=#g" -e 's#== #=#g'`
											if [[ $realSetOption != "" ]]; then
												$sudo_base sed -i "/$SetTarget=/d" $ZinstBaseRoot/vault/zinst/zinst_set.list
												echo "$PackageS.$realSetOption" >> $ZinstBaseRoot/vault/zinst/zinst_set.list
											fi
									fi
								let ConfCounter=$ConfCounter+1
							done

							$sudo_base cat  $ZinstBaseRoot/vault/zinst/zinst_set.list |grep "^$SetTarget="
							echo -e "`date +%Y.%m.%d_%T`\t $WhoStamps : $Command_p - $SetOptionValueE  " >> $History_LOG

								if [[ $SetTarget != $CurrentSetCheck ]]; then
									### Cancel Setup when it meet th Empty result
										if [[ $Grep_Option = "" ]]
										then
											echo " It dose not existed target option"
											echo " ex) zinst set vipctl.onboot=yes "
											exit 0;
										fi
									## Remove temporary 2015.03.06
									# echo "$SetOptionValueE" >> $ZinstBaseRoot/vault/zinst/zinst_set.list
									echo -e "`date +%Y.%m.%d_%T`\t $WhoStamps : $Command_p - $SetOptionValueE  " >> $History_LOG
								fi
					else
						echo " --- Package name has not found. Please insert a package name & option exactly ---"
					fi
				let CountSet=$CountSet+1
			done
						Save_Restore_file $*
	fi
